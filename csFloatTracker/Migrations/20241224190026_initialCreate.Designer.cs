// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using csFloatTracker.Context;

#nullable disable

namespace csFloatTracker.Migrations
{
    [DbContext(typeof(FloatTrackerContext))]
    [Migration("20241224190026_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("csFloatTracker.Model.CsAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Profit")
                        .HasColumnType("TEXT");

                    b.Property<int>("PurchasedCount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoldCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CsAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Balance = 0m,
                            Profit = 0m,
                            PurchasedCount = 0,
                            SoldCount = 0
                        });
                });

            modelBuilder.Entity("csFloatTracker.Model.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int>("CsAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Float")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CsAccountId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("csFloatTracker.Model.TransactionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("BuyPrice")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CsAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Float")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Profit")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("SoldDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("SoldPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Tax")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CsAccountId");

                    b.ToTable("TransactionHistory");
                });

            modelBuilder.Entity("csFloatTracker.Model.InventoryItem", b =>
                {
                    b.HasOne("csFloatTracker.Model.CsAccount", "CsAccount")
                        .WithMany("Inventory")
                        .HasForeignKey("CsAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CsAccount");
                });

            modelBuilder.Entity("csFloatTracker.Model.TransactionItem", b =>
                {
                    b.HasOne("csFloatTracker.Model.CsAccount", "CsAccount")
                        .WithMany("TransactionHistory")
                        .HasForeignKey("CsAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CsAccount");
                });

            modelBuilder.Entity("csFloatTracker.Model.CsAccount", b =>
                {
                    b.Navigation("Inventory");

                    b.Navigation("TransactionHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
